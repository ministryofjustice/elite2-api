GET_BOOKING_SENTENCE_DETAIL {
  SELECT OB.OFFENDER_BOOK_ID,
    (SELECT MIN(OST.START_DATE)
     FROM OFFENDER_SENTENCE_TERMS OST
     WHERE OST.SENTENCE_TERM_CODE = 'IMP'
     AND OST.OFFENDER_BOOK_ID = OB.OFFENDER_BOOK_ID
     GROUP BY OST.OFFENDER_BOOK_ID) SENTENCE_START_DATE,
    SED SENTENCE_EXPIRY_DATE,
    LED LICENCE_EXPIRY_DATE,
    PED PAROLE_ELIGIBILITY_DATE,
    HDCED HOME_DET_CURF_ELIGIBILITY_DATE,
    HDCAD_OVERRIDED_DATE HOME_DET_CURF_ACTUAL_DATE,
    APD_OVERRIDED_DATE ACTUAL_PAROLE_DATE,
    ETD EARLY_TERM_DATE,
    MTD MID_TERM_DATE,
    LTD LATE_TERM_DATE,
    TARIFF_DATE,
    ARD_OVERRIDED_DATE,
    ARD_CALCULATED_DATE,
    CRD_OVERRIDED_DATE,
    CRD_CALCULATED_DATE,
    NPD_OVERRIDED_DATE,
    NPD_CALCULATED_DATE,
    PRRD_OVERRIDED_DATE,
    PRRD_CALCULATED_DATE,
    ROTL RELEASE_ON_TEMP_LICENCE_DATE,
    ERSED EARLY_REMOVAL_SCHEME_ELIG_DATE,
    TUSED TOPUP_SUPERVISION_EXPIRY_DATE,
    (SELECT SUM(ADJUST_DAYS)
     FROM OFFENDER_KEY_DATE_ADJUSTS OKDA
     WHERE OKDA.SENTENCE_ADJUST_CODE = 'ADA'
     AND OKDA.ACTIVE_FLAG = 'Y'
     AND OKDA.OFFENDER_BOOK_ID = OB.OFFENDER_BOOK_ID
     GROUP BY OKDA.OFFENDER_BOOK_ID) ADDITIONAL_DAYS_AWARDED
  FROM
    (SELECT OSC.OFFENDER_BOOK_ID,
            CALCULATION_DATE,
            COALESCE(SED_OVERRIDED_DATE, SED_CALCULATED_DATE) SED,
            COALESCE(LED_OVERRIDED_DATE, LED_CALCULATED_DATE) LED,
            COALESCE(PED_OVERRIDED_DATE, PED_CALCULATED_DATE) PED,
            COALESCE(HDCED_OVERRIDED_DATE, HDCED_CALCULATED_DATE) HDCED,
            COALESCE(TUSED_OVERRIDED_DATE, TUSED_CALCULATED_DATE) TUSED,
            COALESCE(ETD_OVERRIDED_DATE, ETD_CALCULATED_DATE) ETD,
            COALESCE(MTD_OVERRIDED_DATE, MTD_CALCULATED_DATE) MTD,
            COALESCE(LTD_OVERRIDED_DATE, LTD_CALCULATED_DATE) LTD,
            COALESCE(TARIFF_OVERRIDED_DATE, TARIFF_CALCULATED_DATE) TARIFF_DATE,
            HDCAD_OVERRIDED_DATE,
            APD_OVERRIDED_DATE,
            ARD_OVERRIDED_DATE,
            ARD_CALCULATED_DATE,
            CRD_OVERRIDED_DATE,
            CRD_CALCULATED_DATE,
            NPD_OVERRIDED_DATE,
            NPD_CALCULATED_DATE,
            PRRD_OVERRIDED_DATE,
            PRRD_CALCULATED_DATE,
            ROTL_OVERRIDED_DATE ROTL,
            ERSED_OVERRIDED_DATE ERSED
     FROM OFFENDER_SENT_CALCULATIONS OSC
       INNER JOIN (SELECT OFFENDER_BOOK_ID, MAX(OFFENDER_SENT_CALCULATION_ID) MAX_OSC_ID
                   FROM OFFENDER_SENT_CALCULATIONS
                   GROUP BY OFFENDER_BOOK_ID) LATEST_OSC
         ON OSC.OFFENDER_BOOK_ID = LATEST_OSC.OFFENDER_BOOK_ID
            AND OSC.OFFENDER_SENT_CALCULATION_ID = LATEST_OSC.MAX_OSC_ID) CALC_DATES
    RIGHT JOIN OFFENDER_BOOKINGS OB ON CALC_DATES.OFFENDER_BOOK_ID = OB.OFFENDER_BOOK_ID
  WHERE OB.OFFENDER_BOOK_ID = :bookingId
}

GET_OFFENDER_SENTENCE_DETAIL {
  SELECT OB.OFFENDER_BOOK_ID,
         O.OFFENDER_ID_DISPLAY                          OFFENDER_NO,
         O.FIRST_NAME,
         O.LAST_NAME,
         O.BIRTH_DATE                                   DATE_OF_BIRTH,
         OB.agy_loc_id                                  agency_location_id,
         AL.description                                 agency_location_desc,
         AIL.DESCRIPTION                                internal_location_desc,
         (
           SELECT OI.OFFENDER_IMAGE_ID
           FROM OFFENDER_IMAGES OI
           WHERE OI.ACTIVE_FLAG = 'Y'
                 AND IMAGE_OBJECT_TYPE = 'OFF_BKG'
                 AND OI.OFFENDER_BOOK_ID = OB.OFFENDER_BOOK_ID
                 AND OI.IMAGE_VIEW_TYPE = 'FACE'
                 AND OI.ORIENTATION_TYPE = 'FRONT'
                 AND CREATE_DATETIME = (SELECT MAX(CREATE_DATETIME)
                                        FROM OFFENDER_IMAGES
                                        WHERE ACTIVE_FLAG = 'Y'
                                              AND IMAGE_OBJECT_TYPE = 'OFF_BKG'
                                              AND OFFENDER_BOOK_ID = OI.OFFENDER_BOOK_ID
                                              AND IMAGE_VIEW_TYPE = 'FACE'
                                              AND ORIENTATION_TYPE = 'FRONT')
         ) AS FACIAL_IMAGE_ID,
         COALESCE(ord.release_date, ord.auto_release_date) CONFIRMED_RELEASE_DATE,
         (  SELECT MIN(OST.START_DATE)
              FROM OFFENDER_SENTENCE_TERMS OST
             WHERE OST.SENTENCE_TERM_CODE = 'IMP'
                   AND OST.OFFENDER_BOOK_ID = OB.OFFENDER_BOOK_ID
          GROUP BY OST.OFFENDER_BOOK_ID) SENTENCE_START_DATE,
         SED SENTENCE_EXPIRY_DATE,
         LED LICENCE_EXPIRY_DATE,
         PED PAROLE_ELIGIBILITY_DATE,
         HDCED HOME_DET_CURF_ELIGIBILITY_DATE,
         HDCAD_OVERRIDED_DATE HOME_DET_CURF_ACTUAL_DATE,
         APD_OVERRIDED_DATE ACTUAL_PAROLE_DATE,
         ETD EARLY_TERM_DATE,
         MTD MID_TERM_DATE,
         LTD LATE_TERM_DATE,
         TARIFF_DATE,
         ARD_OVERRIDED_DATE,
         ARD_CALCULATED_DATE,
         CRD_OVERRIDED_DATE,
         CRD_CALCULATED_DATE,
         NPD_OVERRIDED_DATE,
         NPD_CALCULATED_DATE,
         PRRD_OVERRIDED_DATE,
         PRRD_CALCULATED_DATE,
         ROTL RELEASE_ON_TEMP_LICENCE_DATE,
         ERSED EARLY_REMOVAL_SCHEME_ELIG_DATE,
         TUSED TOPUP_SUPERVISION_EXPIRY_DATE,
         (  SELECT SUM(ADJUST_DAYS)
              FROM OFFENDER_KEY_DATE_ADJUSTS OKDA
             WHERE OKDA.SENTENCE_ADJUST_CODE = 'ADA'
                   AND OKDA.ACTIVE_FLAG = 'Y'
                   AND OKDA.OFFENDER_BOOK_ID = OB.OFFENDER_BOOK_ID
          GROUP BY OKDA.OFFENDER_BOOK_ID) ADDITIONAL_DAYS_AWARDED
  FROM
      (SELECT OSC.OFFENDER_BOOK_ID,
              CALCULATION_DATE,
              COALESCE(SED_OVERRIDED_DATE, SED_CALCULATED_DATE) SED,
              COALESCE(LED_OVERRIDED_DATE, LED_CALCULATED_DATE) LED,
              COALESCE(PED_OVERRIDED_DATE, PED_CALCULATED_DATE) PED,
              COALESCE(HDCED_OVERRIDED_DATE, HDCED_CALCULATED_DATE) HDCED,
              COALESCE(TUSED_OVERRIDED_DATE, TUSED_CALCULATED_DATE) TUSED,
              COALESCE(ETD_OVERRIDED_DATE, ETD_CALCULATED_DATE) ETD,
              COALESCE(MTD_OVERRIDED_DATE, MTD_CALCULATED_DATE) MTD,
              COALESCE(LTD_OVERRIDED_DATE, LTD_CALCULATED_DATE) LTD,
              COALESCE(TARIFF_OVERRIDED_DATE, TARIFF_CALCULATED_DATE) TARIFF_DATE,
              HDCAD_OVERRIDED_DATE,
              APD_OVERRIDED_DATE,
              ARD_OVERRIDED_DATE,
              ARD_CALCULATED_DATE,
              CRD_OVERRIDED_DATE,
              CRD_CALCULATED_DATE,
              NPD_OVERRIDED_DATE,
              NPD_CALCULATED_DATE,
              PRRD_OVERRIDED_DATE,
              PRRD_CALCULATED_DATE,
              ROTL_OVERRIDED_DATE ROTL,
              ERSED_OVERRIDED_DATE ERSED
         FROM OFFENDER_SENT_CALCULATIONS OSC
              INNER JOIN (
                   SELECT OFFENDER_BOOK_ID, MAX(OFFENDER_SENT_CALCULATION_ID) MAX_OSC_ID
                     FROM OFFENDER_SENT_CALCULATIONS
                 GROUP BY OFFENDER_BOOK_ID
              ) LATEST_OSC ON OSC.OFFENDER_BOOK_ID = LATEST_OSC.OFFENDER_BOOK_ID
                              AND OSC.OFFENDER_SENT_CALCULATION_ID = LATEST_OSC.MAX_OSC_ID
      ) CALC_DATES
      RIGHT JOIN OFFENDER_BOOKINGS OB ON CALC_DATES.OFFENDER_BOOK_ID = OB.OFFENDER_BOOK_ID
      INNER JOIN OFFENDERS O ON OB.OFFENDER_ID = O.OFFENDER_ID
      LEFT JOIN AGENCY_INTERNAL_LOCATIONS AIL ON OB.LIVING_UNIT_ID = AIL.INTERNAL_LOCATION_ID
      LEFT JOIN AGENCY_LOCATIONS AL ON AL.AGY_LOC_ID = OB.AGY_LOC_ID
      LEFT JOIN OFFENDER_RELEASE_DETAILS ORD ON ORD.OFFENDER_BOOK_ID = OB.OFFENDER_BOOK_ID
  WHERE OB.ACTIVE_FLAG = 'Y' AND OB.BOOKING_SEQ = 1
}

GET_BOOKING_ACTIVITIES {
  SELECT OPP.OFFENDER_BOOK_ID BOOKING_ID,
         OCA.EVENT_ID,
         OCA.EVENT_OUTCOME,
         OCA.PERFORMANCE_CODE AS PERFORMANCE,
         OCA.COMMENT_TEXT AS OUTCOME_COMMENT,
         OCA.PAY_FLAG AS PAID,
	       'INT_MOV' EVENT_CLASS,
	       COALESCE(OCA.EVENT_STATUS, 'SCH') EVENT_STATUS,
         'PRISON_ACT' EVENT_TYPE,
         RD1.DESCRIPTION EVENT_TYPE_DESC,
	       CA.COURSE_ACTIVITY_TYPE EVENT_SUB_TYPE,
	       RD2.DESCRIPTION EVENT_SUB_TYPE_DESC,
	       CS.SCHEDULE_DATE EVENT_DATE,
	       CS.START_TIME,
	       CS.END_TIME,
         COALESCE(AIL.USER_DESC, AIL.DESCRIPTION, AGY.DESCRIPTION, ADDR.PREMISE) EVENT_LOCATION,
         'PA' EVENT_SOURCE,
         CA.CODE EVENT_SOURCE_CODE,
         CA.DESCRIPTION EVENT_SOURCE_DESC,
         (SELECT CASE WHEN CA.PAY_PER_SESSION = 'H' THEN CAPR.HALF_DAY_RATE ELSE CAPR.HALF_DAY_RATE * 2 END
           FROM OFFENDER_PRG_PRF_PAY_BANDS OPPPB,
                COURSE_ACTIVITY_PAY_RATES CAPR
           WHERE OCA.CRS_ACTY_ID = CAPR.CRS_ACTY_ID
             AND OPPPB.OFF_PRGREF_ID = OCA.OFF_PRGREF_ID
             AND CAPR.PAY_BAND_CODE = OPPPB.PAY_BAND_CODE
             AND (SELECT OIL.IEP_LEVEL
                  FROM OFFENDER_IEP_LEVELS OIL
                  WHERE OIL.OFFENDER_BOOK_ID = OB.OFFENDER_BOOK_ID
                    AND OIL.IEP_LEVEL_SEQ = (SELECT MAX (IEP_LEVEL_SEQ)
                                           FROM OFFENDER_IEP_LEVELS OIL2
                                           WHERE OIL2.OFFENDER_BOOK_ID = OIL.OFFENDER_BOOK_ID
                                             AND OIL2.IEP_DATE <= OCA.EVENT_DATE)) = CAPR.IEP_LEVEL
             AND OCA.EVENT_DATE BETWEEN CAPR.START_DATE  AND COALESCE (CAPR.END_DATE,  TO_DATE('31-12-2382','DD-MM-YYYY'))
             AND OCA.EVENT_DATE BETWEEN OPPPB.START_DATE AND COALESCE (OPPPB.END_DATE, TO_DATE('31-12-2382','DD-MM-YYYY'))
             AND ROWNUM = 1
         ) AS PAY_RATE

  FROM OFFENDER_PROGRAM_PROFILES OPP
    INNER JOIN OFFENDER_BOOKINGS OB ON OB.OFFENDER_BOOK_ID = OPP.OFFENDER_BOOK_ID AND OB.ACTIVE_FLAG = 'Y' AND OB.BOOKING_SEQ = 1
    INNER JOIN COURSE_ACTIVITIES CA ON CA.CRS_ACTY_ID = OPP.CRS_ACTY_ID
    INNER JOIN COURSE_SCHEDULES CS ON CA.CRS_ACTY_ID = CS.CRS_ACTY_ID
      AND CS.SCHEDULE_DATE >= TRUNC(OPP.OFFENDER_START_DATE)
      AND TRUNC(CS.SCHEDULE_DATE) <= COALESCE(OPP.OFFENDER_END_DATE, CA.SCHEDULE_END_DATE, CS.SCHEDULE_DATE)
      AND CS.SCHEDULE_DATE >= TRUNC(COALESCE(:fromDate, CS.SCHEDULE_DATE))
      AND TRUNC(CS.SCHEDULE_DATE) <= COALESCE(:toDate, CS.SCHEDULE_DATE)
    LEFT JOIN OFFENDER_COURSE_ATTENDANCES OCA ON OCA.OFFENDER_BOOK_ID = OPP.OFFENDER_BOOK_ID
      AND TRUNC(OCA.EVENT_DATE) = TRUNC(CS.SCHEDULE_DATE)
      AND OCA.CRS_SCH_ID = CS.CRS_SCH_ID
    LEFT JOIN REFERENCE_CODES RD1 ON RD1.CODE = 'PRISON_ACT' AND RD1.DOMAIN = 'INT_SCH_TYPE'
    LEFT JOIN REFERENCE_CODES RD2 ON RD2.CODE = CA.COURSE_ACTIVITY_TYPE AND RD2.DOMAIN = 'INT_SCH_RSN'
    LEFT JOIN AGENCY_INTERNAL_LOCATIONS AIL ON CA.INTERNAL_LOCATION_ID = AIL.INTERNAL_LOCATION_ID
    LEFT JOIN AGENCY_LOCATIONS AGY ON CA.AGY_LOC_ID = AGY.AGY_LOC_ID
    LEFT JOIN ADDRESSES ADDR ON CA.SERVICES_ADDRESS_ID = ADDR.ADDRESS_ID
  WHERE OPP.OFFENDER_PROGRAM_STATUS = 'ALLOC'
    AND COALESCE(OPP.SUSPENDED_FLAG, 'N') = 'N'
    AND CA.ACTIVE_FLAG = 'Y'
    AND CA.COURSE_ACTIVITY_TYPE IS NOT NULL
    AND CS.CATCH_UP_CRS_SCH_ID IS NULL
    AND (UPPER(TO_CHAR(CS.SCHEDULE_DATE, 'DY')), CS.SLOT_CATEGORY_CODE) NOT IN
	    (SELECT OE.EXCLUDE_DAY, COALESCE(OE.SLOT_CATEGORY_CODE, CS.SLOT_CATEGORY_CODE)
       FROM OFFENDER_EXCLUDE_ACTS_SCHDS OE
       WHERE OE.OFF_PRGREF_ID = OPP.OFF_PRGREF_ID)
}

GET_BOOKING_APPOINTMENTS {
  SELECT OIS.OFFENDER_BOOK_ID BOOKING_ID,
	       OIS.EVENT_CLASS,
	       OIS.EVENT_STATUS,
         OIS.EVENT_TYPE,
         RC1.DESCRIPTION EVENT_TYPE_DESC,
	       OIS.EVENT_SUB_TYPE,
	       RC2.DESCRIPTION EVENT_SUB_TYPE_DESC,
	       OIS.EVENT_DATE,
	       OIS.START_TIME,
	       OIS.END_TIME,
         COALESCE(AIL.USER_DESC, AIL.DESCRIPTION, AGY.DESCRIPTION, ADDR.PREMISE, RC3.DESCRIPTION) EVENT_LOCATION,
         'APP' EVENT_SOURCE,
         'APP' EVENT_SOURCE_CODE,
         OIS.COMMENT_TEXT EVENT_SOURCE_DESC
  FROM OFFENDER_IND_SCHEDULES OIS
    INNER JOIN OFFENDER_BOOKINGS OB ON OB.OFFENDER_BOOK_ID = OIS.OFFENDER_BOOK_ID AND OB.ACTIVE_FLAG = 'Y'
    LEFT JOIN REFERENCE_CODES RC1 ON RC1.CODE = OIS.EVENT_TYPE AND RC1.DOMAIN = 'INT_SCH_TYPE'
    LEFT JOIN REFERENCE_CODES RC2 ON RC2.CODE = OIS.EVENT_SUB_TYPE AND RC2.DOMAIN = 'INT_SCH_RSN'
    LEFT JOIN AGENCY_INTERNAL_LOCATIONS AIL ON OIS.TO_INTERNAL_LOCATION_ID = AIL.INTERNAL_LOCATION_ID
    LEFT JOIN AGENCY_LOCATIONS AGY ON OIS.TO_AGY_LOC_ID = AGY.AGY_LOC_ID
    LEFT JOIN ADDRESSES ADDR ON OIS.TO_ADDRESS_ID = ADDR.ADDRESS_ID
    LEFT JOIN REFERENCE_CODES RC3 ON RC3.CODE = OIS.TO_CITY_CODE AND RC3.DOMAIN = 'CITY'
  WHERE OIS.EVENT_TYPE = 'APP'
    AND OIS.EVENT_STATUS = 'SCH'
    AND OIS.EVENT_DATE >= TRUNC(COALESCE(:fromDate, OIS.EVENT_DATE))
    AND TRUNC(OIS.EVENT_DATE) <= COALESCE(:toDate, OIS.EVENT_DATE)
}
