GET_RECENT_MOVEMENTS {
 SELECT OFFENDERS.OFFENDER_ID_DISPLAY  AS OFFENDER_NO,
        OEM.CREATE_DATETIME            AS CREATE_DATE_TIME,
        OEM.FROM_AGY_LOC_ID            AS FROM_AGENCY,
        OEM.TO_AGY_LOC_ID              AS TO_AGENCY,
        OEM.MOVEMENT_TYPE,
        OEM.DIRECTION_CODE
  FROM OFFENDER_EXTERNAL_MOVEMENTS OEM
    INNER JOIN OFFENDER_BOOKINGS OB    ON OB.OFFENDER_BOOK_ID = OEM.OFFENDER_BOOK_ID AND OB.BOOKING_SEQ = 1
    INNER JOIN OFFENDERS               ON OFFENDERS.OFFENDER_ID = OB.OFFENDER_ID
  WHERE OEM.MOVEMENT_DATE = :movementDate
    AND OEM.CREATE_DATETIME >= :fromDateTime
    AND OEM.MOVEMENT_TYPE IN ('TRN','REL','ADM')
    AND OEM.MOVEMENT_SEQ = (SELECT MAX(OEM2.MOVEMENT_SEQ) FROM OFFENDER_EXTERNAL_MOVEMENTS OEM2
                            WHERE OEM2.OFFENDER_BOOK_ID = OEM.OFFENDER_BOOK_ID)
    AND OB.AGY_LOC_ID <> 'ZZGHI'
}

GET_RECENT_MOVEMENTS_BY_OFFENDERS_AND_MOVEMENT_TYPES {
  SELECT OFFENDERS.OFFENDER_ID_DISPLAY  AS OFFENDER_NO,
        OEM.CREATE_DATETIME            AS CREATE_DATE_TIME,
        OEM.FROM_AGY_LOC_ID            AS FROM_AGENCY,
        OEM.TO_AGY_LOC_ID              AS TO_AGENCY,
        OEM.MOVEMENT_TYPE,
        OEM.DIRECTION_CODE,
        AL1.DESCRIPTION               AS FROM_AGENCY_DESCRIPTION,
        AL2.DESCRIPTION               AS TO_AGENCY_DESCRIPTION,
        RC1.DESCRIPTION               AS MOVEMENT_TYPE_DESCRIPTION
  FROM OFFENDER_EXTERNAL_MOVEMENTS OEM
    INNER JOIN OFFENDER_BOOKINGS OB    ON OB.OFFENDER_BOOK_ID = OEM.OFFENDER_BOOK_ID AND OB.BOOKING_SEQ = 1
    INNER JOIN OFFENDERS               ON OFFENDERS.OFFENDER_ID = OB.OFFENDER_ID
    LEFT JOIN AGENCY_LOCATIONS AL1 ON OEM.FROM_AGY_LOC_ID = AL1.AGY_LOC_ID
    LEFT JOIN AGENCY_LOCATIONS AL2 ON OEM.TO_AGY_LOC_ID = AL2.AGY_LOC_ID
    LEFT JOIN REFERENCE_CODES RC1 ON RC1.CODE = OEM.MOVEMENT_TYPE AND RC1.DOMAIN = 'MOVE_TYPE'
  WHERE
    OEM.MOVEMENT_SEQ = (SELECT MAX(OEM2.MOVEMENT_SEQ) FROM OFFENDER_EXTERNAL_MOVEMENTS OEM2
                            WHERE OEM2.OFFENDER_BOOK_ID = OEM.OFFENDER_BOOK_ID
                              AND OEM2.MOVEMENT_TYPE IN (:movementTypes))
    AND OB.AGY_LOC_ID <> 'ZZGHI'
    AND OFFENDERS.OFFENDER_ID_DISPLAY in (:offenderNumbers)
        AND OEM.MOVEMENT_TYPE IN (:movementTypes)
}

GET_RECENT_MOVEMENTS_BY_OFFENDERS {
    SELECT OFFENDERS.OFFENDER_ID_DISPLAY  AS OFFENDER_NO,
        OEM.CREATE_DATETIME            AS CREATE_DATE_TIME,
        OEM.FROM_AGY_LOC_ID            AS FROM_AGENCY,
        OEM.TO_AGY_LOC_ID              AS TO_AGENCY,
        OEM.MOVEMENT_TYPE,
        OEM.DIRECTION_CODE,
        AL1.DESCRIPTION               AS FROM_AGENCY_DESCRIPTION,
        AL2.DESCRIPTION               AS TO_AGENCY_DESCRIPTION,
        RC1.DESCRIPTION               AS MOVEMENT_TYPE_DESCRIPTION
  FROM OFFENDER_EXTERNAL_MOVEMENTS OEM
    INNER JOIN OFFENDER_BOOKINGS OB    ON OB.OFFENDER_BOOK_ID = OEM.OFFENDER_BOOK_ID AND OB.BOOKING_SEQ = 1
    INNER JOIN OFFENDERS               ON OFFENDERS.OFFENDER_ID = OB.OFFENDER_ID
    LEFT JOIN AGENCY_LOCATIONS AL1 ON OEM.FROM_AGY_LOC_ID = AL1.AGY_LOC_ID
    LEFT JOIN AGENCY_LOCATIONS AL2 ON OEM.TO_AGY_LOC_ID = AL2.AGY_LOC_ID
    LEFT JOIN REFERENCE_CODES RC1 ON RC1.CODE = OEM.MOVEMENT_TYPE AND RC1.DOMAIN = 'MOVE_TYPE'
  WHERE
    OEM.MOVEMENT_SEQ = (SELECT MAX(OEM2.MOVEMENT_SEQ) FROM OFFENDER_EXTERNAL_MOVEMENTS OEM2
                            WHERE OEM2.OFFENDER_BOOK_ID = OEM.OFFENDER_BOOK_ID)
    AND OB.AGY_LOC_ID <> 'ZZGHI'
    AND OFFENDERS.OFFENDER_ID_DISPLAY in (:offenderNumbers)
}


GET_ROLLCOUNT_MOVEMENTS {
SELECT DIRECTION_CODE, MOVEMENT_TYPE, FROM_AGY_LOC_ID AS FROM_AGENCY, TO_AGY_LOC_ID AS TO_AGENCY
      FROM OFFENDER_EXTERNAL_MOVEMENTS OEM
      WHERE MOVEMENT_DATE = :movementDate
}

GET_ROLL_COUNT {
SELECT
  AIL4.INTERNAL_LOCATION_ID                             AS LIVING_UNIT_ID,
  COALESCE(AIL4.USER_DESC, AIL4.INTERNAL_LOCATION_CODE) AS LIVING_UNIT_DESC,
  VR.BEDS_IN_USE,
  VR.CURRENTLY_IN_CELL,
  VR.OUT_OF_LIVING_UNITS,
  VR.CURRENTLY_OUT,
  AIL4.OPERATION_CAPACITY                               AS OPERATIONAL_CAPACITY,
  AIL4.OPERATION_CAPACITY - VR.BEDS_IN_USE              AS NET_VACANCIES,
  AIL4.CAPACITY                                         AS MAXIMUM_CAPACITY,
  AIL4.CAPACITY - VR.BEDS_IN_USE                        AS AVAILABLE_PHYSICAL,
 (SELECT COUNT(1)
   FROM AGENCY_INTERNAL_LOCATIONS AIL2
     INNER JOIN LIVING_UNITS_MV LU2 ON AIL2.INTERNAL_LOCATION_ID = LU2.LIVING_UNIT_ID
   WHERE AIL2.AGY_LOC_ID = VR.AGY_LOC_ID
     AND LU2.ROOT_LIVING_UNIT_ID = AIL4.INTERNAL_LOCATION_ID
     AND SYSDATE BETWEEN DEACTIVATE_DATE AND COALESCE(REACTIVATE_DATE,SYSDATE)) AS OUT_OF_ORDER
FROM
  (SELECT
     LU.AGY_LOC_ID,
     LU.ROOT_LIVING_UNIT_ID,
     SUM(DECODE(OB.LIVING_UNIT_ID, NULL, 0, 1)) AS BEDS_IN_USE,
     SUM(DECODE(OB.AGENCY_IML_ID, NULL, DECODE (OB.IN_OUT_STATUS, 'IN', 1, 0), 0)) AS CURRENTLY_IN_CELL,
     SUM(DECODE(OB.AGENCY_IML_ID, NULL, 0, DECODE (OB.IN_OUT_STATUS, 'IN', 1, 0))) AS OUT_OF_LIVING_UNITS,
     SUM(DECODE(OB.IN_OUT_STATUS, 'OUT', 1, 0)) AS CURRENTLY_OUT
   FROM LIVING_UNITS_MV LU
     LEFT JOIN OFFENDER_BOOKINGS OB ON LU.LIVING_UNIT_ID = OB.LIVING_UNIT_ID AND LU.AGY_LOC_ID = OB.AGY_LOC_ID
   GROUP BY LU.AGY_LOC_ID, LU.ROOT_LIVING_UNIT_ID
  ) VR
  INNER JOIN AGENCY_INTERNAL_LOCATIONS AIL4 ON AIL4.INTERNAL_LOCATION_ID = VR.ROOT_LIVING_UNIT_ID
WHERE AIL4.CERTIFIED_FLAG = :certifiedFlag
  AND AIL4.UNIT_TYPE IS NOT NULL
  AND AIL4.AGY_LOC_ID = :agencyId
  AND AIL4.ACTIVE_FLAG = 'Y'
  AND ((AIL4.PARENT_INTERNAL_LOCATION_ID IS NULL AND :livingUnitId IS NULL) OR AIL4.PARENT_INTERNAL_LOCATION_ID = :livingUnitId)
ORDER BY LIVING_UNIT_DESC
}
