plugins {
    id("uk.gov.justice.hmpps.gradle-spring-boot") version "1.1.2"
    id 'groovy'
}

group 'uk.gov.justice.hmpps.prison'

configurations {
    compile.exclude module: 'commons-logging'
    compile.exclude module: 'log4j'
    compile.exclude module: 'c3p0'
    compile.exclude module: 'tomcat-jdbc'
}

// Exclude Serenity BDD integration and IntTest tests from 'test' task so they can be controlled independently
test {
    exclude '**/executablespecification/*', '**/*IntTest*'
    useJUnitPlatform()
}

dependencies {

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'


    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-devtools'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    implementation 'org.springframework:spring-jms:5.2.9.RELEASE'

    implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.885')
    implementation 'com.amazonaws:amazon-sqs-java-messaging-lib:1.0.8'

    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'com.sun.xml.bind:jaxb-impl:2.3.3'
    implementation 'com.sun.xml.bind:jaxb-core:2.3.0.1'
    implementation 'javax.activation:activation:1.1.1'

    implementation 'commons-codec:commons-codec:1.15'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.3'
    implementation 'com.github.jsqlparser:jsqlparser:3.2'
    implementation 'net.sf.ehcache:ehcache:2.10.6'
    implementation 'com.zaxxer:HikariCP:3.4.5'

    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.swagger:swagger-core:1.6.2'

    implementation 'org.apache.commons:commons-lang3:3.11'
    implementation 'commons-io:commons-io:2.8.0'
    implementation 'org.apache.commons:commons-text:1.9'
    implementation 'com.oracle.database.jdbc:ojdbc10:19.8.0.0'

    compileOnly 'org.projectlombok:lombok:1.18.16'

    runtime 'org.hsqldb:hsqldb:2.5.1'
    runtime 'org.flywaydb:flyway-core:6.5.6'

    testImplementation 'org.springframework.boot:spring-boot-test-autoconfigure'
    testImplementation 'io.rest-assured:rest-assured:4.3.1'
    testImplementation 'io.rest-assured:json-schema-validator:4.3.1'
    testImplementation 'io.rest-assured:spring-mock-mvc:4.3.1'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.google.code.gson:gson:2.8.6'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.7'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.7'

    testImplementation 'com.tngtech.java:junit-dataprovider:1.13.1'
    testImplementation 'net.javacrumbs.json-unit:json-unit-assertj:2.19.0'

    testImplementation 'net.serenity-bdd:serenity-core:2.1.8'
    testImplementation 'net.serenity-bdd:serenity-junit:2.1.8'
    testImplementation 'net.serenity-bdd:serenity-spring:2.1.8'
    testImplementation 'net.serenity-bdd:serenity-cucumber:1.9.51'
    testImplementation 'org.slf4j:slf4j-api:1.7.30'
    testImplementation 'com.github.tomakehurst:wiremock-standalone:2.27.2'
    testImplementation 'io.jsonwebtoken:jjwt:0.9.1'
    testImplementation 'org.glassfish:javax.el:3.0.0'
    testImplementation 'io.swagger.parser.v3:swagger-parser:2.0.20'

    testCompileOnly 'org.projectlombok:lombok:1.18.16'
}

task testIntegration(type: Test) {
    include '**/*IntTest*'
    useJUnitPlatform()
    minHeapSize = "1024m"
    maxHeapSize = "2048m"
}

task testWithSchemaNomis(type: Test) {
    def nomisEnvVars = ['api.db.target'   : 'nomis',
                        'cucumber.options': "--tags 'not (@wip or @broken)'"]

    exclude '**/persistence/*'
    exclude '**/*IntTest*'
    environment nomisEnvVars
    useJUnitPlatform()
}

task testWithSchemaNomisOracle(type: Test) {
    def nomisEnvVars = ['api.db.target'   : 'nomis', 'api.db.dialect': 'oracle',
                        'cucumber.options': "--tags 'not (@wip or @broken)'"]

    exclude '**/persistence/*'
    exclude '**/*IntTest*'
    environment nomisEnvVars
    useJUnitPlatform()
}

test.dependsOn testIntegration, testWithSchemaNomis
