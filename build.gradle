import org.springframework.boot.gradle.plugin.SpringBootPlugin

import java.time.Instant
import java.time.LocalDate

plugins {
    id 'java'
    id 'groovy'
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'org.owasp.dependencycheck' version '5.3.2.1'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'com.github.ben-manes.versions' version '0.28.0'
    id 'se.patrikerdes.use-latest-versions' version '0.2.13'
}

repositories {
    mavenLocal()
    mavenCentral()
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

dependencyUpdates {
    rejectVersionIf {
        isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
    }
}

configurations {
    agentDeps
    agentDeps.transitive = false
}

project.sourceCompatibility = 11
project.targetCompatibility = 11

dependencyCheck {
    failBuildOnCVSS = 5
    suppressionFiles = ['dependency-check-suppress-spring.xml']
    format = 'ALL'
    analyzers {
        assemblyEnabled = false
    }
}

group 'net.syscon.elite'

def today = Instant.now()
def todaysDate = LocalDate.now().format('yyyy-MM-dd')
version = System.getenv().containsKey("BUILD_NUMBER") ? System.getenv("BUILD_NUMBER") : todaysDate

bootJar {
    manifest {
        attributes 'Implementation-Title': rootProject.name, 'Implementation-Version': rootProject.version
    }
}

springBoot {
    buildInfo {
        properties {
            artifact = rootProject.name
            version = version
            group = group
            name = rootProject.name
            time = today
            additional = [
                    by                   : System.properties['user.name'],
                    operatingSystem      : "${System.properties['os.name']} (${System.properties['os.version']})",
                    machine              : InetAddress.localHost.hostName
            ]
        }
    }
}

configurations {
    compile.exclude module: 'commons-logging'
    compile.exclude module: 'log4j'
    compile.exclude module: 'c3p0'
    compile.exclude module: 'tomcat-jdbc'
}

// Exclude Serenity BDD integration and IntTest tests from 'test' task so they can be controlled independently
test {
    exclude '**/executablespecification/*', '**/*IntTest*'
    useJUnitPlatform()
}

dependencyManagement {
    imports {
        mavenBom(SpringBootPlugin.BOM_COORDINATES)
    }
}
ext ['spring-security.version'] = '5.3.1.RELEASE' // pinned due to CVE-2018-1258 brought in by spring-boot-starter-oauth2-resource-server-2.2.5.RELEASE

dependencies {

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'

    implementation files("${rootDir}/lib/ojdbc10-19.3.jar")

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-devtools'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    implementation 'com.nimbusds:nimbus-jose-jwt:8.15' // pinned due to CVE-2019-17195 in 7.8.1 brought in by spring-boot-starter-oauth2-resource-server-2.2.5.RELEASE

    implementation 'org.hibernate:hibernate-java8:5.4.10.Final'
    implementation 'org.springframework:spring-jms:5.2.5.RELEASE'

    implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.768')
    implementation 'com.amazonaws:amazon-sqs-java-messaging-lib:1.0.8'

    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'com.sun.xml.bind:jaxb-impl:2.3.2'
    implementation 'com.sun.xml.bind:jaxb-core:2.3.0.1'
    implementation 'javax.activation:activation:1.1.1'

    implementation 'commons-codec:commons-codec:1.14'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.3'
    implementation 'com.github.jsqlparser:jsqlparser:3.1'
    implementation 'net.sf.ehcache:ehcache:2.10.6'
    implementation 'com.zaxxer:HikariCP:3.4.2'

    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-bean-validators:2.9.2'
    implementation 'io.swagger:swagger-core:1.6.1'

    implementation 'net.logstash.logback:logstash-logback-encoder:6.3'
    implementation 'com.microsoft.azure:applicationinsights-spring-boot-starter:2.6.0'
    implementation 'com.microsoft.azure:applicationinsights-logging-logback:2.6.0'
    agentDeps 'com.microsoft.azure:applicationinsights-agent:2.6.0'
    implementation configurations.agentDeps

    implementation 'org.apache.commons:commons-lang3:3.10'
    implementation 'commons-io:commons-io:2.6'
    implementation 'org.apache.commons:commons-text:1.8'
    implementation 'com.google.guava:guava:29.0-jre'

    implementation 'com.github.timpeeters:spring-boot-graceful-shutdown:2.2.1'

    compileOnly 'org.projectlombok:lombok:1.18.12'

    runtime 'org.hsqldb:hsqldb:2.5.0'
    runtime 'org.flywaydb:flyway-core:6.4.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-test-autoconfigure'
    testImplementation 'io.rest-assured:rest-assured:4.3.0'
    testImplementation 'io.rest-assured:json-schema-validator:4.3.0'
    testImplementation 'io.rest-assured:spring-mock-mvc:4.3.0'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.google.code.gson:gson:2.8.6'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.7'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.7'

    testImplementation 'com.tngtech.java:junit-dataprovider:1.13.1'
    testImplementation 'net.javacrumbs.json-unit:json-unit-assertj:2.17.0'

    testImplementation 'net.serenity-bdd:serenity-core:2.1.8'
    testImplementation 'net.serenity-bdd:serenity-junit:2.1.8'
    testImplementation 'net.serenity-bdd:serenity-spring:2.1.8'
    testImplementation 'net.serenity-bdd:serenity-cucumber:1.9.51'
    testImplementation 'org.slf4j:slf4j-api:1.7.30'
    testImplementation 'com.github.tomakehurst:wiremock-standalone:2.26.3'
    testImplementation 'io.jsonwebtoken:jjwt:0.9.1'
    testImplementation 'io.swagger.parser.v3:swagger-parser-v2-converter:2.0.19'

    testCompileOnly 'org.projectlombok:lombok:1.18.12'
}

task copyAgent(type: Copy) {
  from configurations.agentDeps
  into "$buildDir/libs"
}

assemble.dependsOn copyAgent

task testIntegration(type: Test) {
    include '**/*IntTest*'
}

task testWithSchemaNomis(type: Test) {
    def nomisEnvVars = ['api.db.target'   : 'nomis',
                        'cucumber.options': "--tags 'not (@wip or @broken)'"]

    exclude '**/persistence/*'
    exclude '**/*IntTest*'
    environment nomisEnvVars
}

task testWithSchemaNomisOracle(type: Test) {
    def nomisEnvVars = ['api.db.target'   : 'nomis', 'api.db.dialect': 'oracle',
                        'cucumber.options': "--tags 'not (@wip or @broken)'"]

    exclude '**/persistence/*'
    exclude '**/*IntTest*'
    environment nomisEnvVars
}

test.dependsOn testIntegration, testWithSchemaNomis
