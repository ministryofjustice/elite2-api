/:
  (javaOperationName): getUsers
  type: { readOnlyCollectionPaged: { type: UserDetail, description: Get user details. } }
  is: [ sortable: { fieldsList: "firstName, lastName" } ]
  get:
    queryParameters:
      nameFilter?:
        type: string
        description: Filter results by first name and/or username and/or last name of staff member.
        example: Kirsty
      accessRole?:
        type: string
        description: Filter results by access role
        example: OMIC_ADMIN

/me/locations:
  (javaOperationName): getMyLocations
  description: Returns list of locations associated with current user.
  type: { readOnlyCollection: { type: Location, description: List of locations accessible to current user. } }
  
/{username}:
  (javaOperationName): getUserDetails
  type: { readOnlyItem: { type: UserDetail,  description: User detail. } }
  uriParameters:
    username:
      description: The username of the user.

/{username}/access-role/{roleCode}:
  uriParameters:
    username:
      description: The username of the user.
    roleCode:
      type: string
      description: access role code
      example: KW_ADMIN
  put:
    (javaOperationName): addAccessRole
    description: Add the given access role to the user.
    responses:
      200:
        mediaType:
      201:
        mediaType:

/add/default/{caseload}:
  description: Add the default caseload for API access to a specified caseload (prison) for all active staff
  uriParameters:
    caseload:
      type: string
      description: The caseload (equates to prison) id to add all active users to default API caseload (NWEB)
  put:
    (javaOperationName): addApiAccessForCaseload
    description: Add the NWEB caseload to specified caseload.
    responses:
      200:
        mediaType:
      201:
        mediaType:

/{username}/caseload/{caseload}/access-role/{roleCode}:
  uriParameters:
    username:
      description: The username of the user.
    caseload:
      type: string
      description: Caseload Id
      example: LEI
    roleCode:
      type: string
      description: access role code
      example: KW_ADMIN
  delete:
    (javaOperationName): removeUsersAccessRoleForCaseload
    description: Remove the given access role from the user.
    responses:
      200:
        mediaType:
      404:
        mediaType:
  put:
    (javaOperationName): addAccessRoleByCaseload
    description: Add the given access role to the user and caseload.
    responses:
      200:
        mediaType:
      201:
        mediaType:

/staff/{staffId}:
  (deprecated): Use <b>/staff/{staffId}</b> instead. This API will be removed in a future release.
  (javaOperationName): getStaffDetail
  type: { readOnlyItem: { type: StaffDetail, description: Staff detail. } }
  uriParameters:
    staffId:
      (javaType): Long
      description: The staff id of the staff member.

/me:
  (javaOperationName): getMyUserInformation
  type: { readOnlyItem: { type: UserDetail, description: Current user detail. } }

/me/bookingAssignments:
  (deprecated): Use <b>/bookings?iepLevel=true&offenderNo=&offenderNo=</b> instead. This API will be removed in a future release as keyworker holds the relationship to offender
  (javaOperationName): getMyAssignments
  description: Offender Assignments for this logged in user
  type: { readOnlyCollectionPaged: { type: OffenderBooking, description: List of offender bookings assigned to current user. } }

/me/roles:
  (javaOperationName): getMyRoles
  description: Get the logged in users roles
  type: { readOnlyCollection: { type: UserRole, description: List of roles for current user. } }
  get:
    queryParameters:
      allRoles?:
        type: boolean
        description: If set to true then all roles are returned rather than just API roles
        example: false
        default: false

/me/caseLoads:
  (javaOperationName): getMyCaseLoads
  description: Returns the list of caseloads associated to the user
  type: { readOnlyCollection: { type: CaseLoad, description: List of caseloads accessible to current user. } }
  get:
    queryParameters:
      allCaseloads?:
        type: boolean
        description: If set to true then all caseloads are returned
        example: false
        default: false

  
/me/caseNoteTypes:
  (javaOperationName): getMyCaseNoteTypes
  type: { readOnlyCollection: { type: ReferenceCode, description: List of all case note types (with sub-types) accessible to current user (and based on working caseload). } }
  is: [
    sortable: {fieldsList : "code, activeFlag, description"},
  ]

/me/activeCaseLoad:
  (javaOperationName): updateMyActiveCaseLoad
  description: The active caseload associated to the user
  put:
    description: Update working caseload for current user.
    body:
      application/json:
        type: CaseLoad
    responses:
      401:
        body:
          application/json:
            type: ErrorResponse
            description: Invalid username or password
            example:  !include ../examples/ouput/401.sample.json
      403:
        body:
          application/json:
            type: ErrorResponse
            description: the user does not have permission to view the caseload.
            example:  !include ../examples/ouput/403.sample.json

/access-roles/caseload/{caseload}/access-role/{roleCode}:
  (javaOperationName): getAllUsersHavingRoleAtCaseload
  description: List users having role at caseload
  type: { readOnlyCollection: { type: string, description: List of users who have the named role at the named caseload   } }
  uriParameters:
    caseload:
      type: string
      description: Caseload Id
      example: LEI
    roleCode:
      type: string
      description: access role code
      example: KW_ADMIN

/caseload/{caseload}:
  (javaOperationName): getUsersByCaseLoad
  type: { readOnlyCollectionPaged: { type: UserDetail, description: Get user details by prison. } }
  is: [ sortable: { fieldsList: "firstName, lastName" } ]
  uriParameters:
    caseload:
      type: string
      description: The agency (prison) id.
      example: MDI
  get:
    queryParameters:
      nameFilter?:
        type: string
        description: Filter results by first name and/or username and/or last name of staff member.
        example: Kirsty
      accessRole?:
        type: string
        description: Filter results by access role
        example: MAINTAIN_ACCESS_ROLES

/local-administrator/caseload/{caseload}:
  (javaOperationName): getLocalAdministratorUsersByCaseLoad
  type: { readOnlyCollectionPaged: { type: UserDetail, description: Get user details for local administrators by prison. } }
  is: [ sortable: { fieldsList: "firstName, lastName" } ]
  uriParameters:
    caseload:
      type: string
      description: The agency (prison) id.
      example: MDI
  get:
    queryParameters:
      nameFilter?:
        type: string
        description: Filter results by first name and/or username and/or last name of staff member.
        example: Kirsty
      accessRole?:
        type: string
        description: Filter results by access role
        example: MAINTAIN_ACCESS_ROLES

/{username}/access-roles/caseload/{caseload}:
  (javaOperationName): getRolesForUserAndCaseload
  type: { readOnlyCollection: { type: AccessRole, description: List of roles for the given user and caseload   } }
  uriParameters:
    caseload:
      type: string
      description: Caseload Id
      example: LEI
    username:
      type: string
      description: user account to filter by
      example: JSMITH_GEN
  get:
    queryParameters:
      includeAdmin:
        type: boolean
        default: false
        description: Include admin roles