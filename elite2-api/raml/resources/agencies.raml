/:
  description: Returns list of active agencies.
  (javaOperationName): getAgencies
  type: { readOnlyCollectionPaged: { type: Agency, description: List of active agencies. } }

/{agencyId}:
  (javaOperationName): getAgency
  type: { readOnlyItem: { type: Agency, description: Agency detail. } }

/{agencyId}/locations:
  (javaOperationName): getAgencyLocations
  type: { readOnlyCollection: { type: Location, description: List of active internal locations for agency. } }
  get:
    queryParameters:
      eventType?:
        type: string
        description: Restricts list of locations returned to those that can be used for the specified event type.
        example: APP (appointment)
  is: [
    sortable: {fieldsList : "description, userDescription"}
  ]

/{agencyId}/eventLocations:
  (javaOperationName): getAgencyEventLocations
  type: { readOnlyCollection: { type: Location, description: "List of locations for agency where events (appointments, visits, activities) could be held." } }
  is: [
    sortable: {fieldsList : "description, userDescription"}
  ]

/{agencyId}/eventLocationsBooked:
  (javaOperationName): getAgencyEventLocationsBooked
  get:
    queryParameters:
      bookedOnDay:
        type: date-only
        description: Filter list to only return locations which prisoners will be attending on this day
      timeSlot?:
        type : enum
        (javaType): TimeSlot
        description: Only return locations which prisoners will be attending in this time slot (AM, PM or ED, and bookedOnDay must be specified)
  type: { readOnlyCollection: { type: Location, description: "List of locations for agency where events (appointments, visits, activities) are being held." } }

/{agencyId}/locations/groups:
  (javaOperationName): getAvailableLocationGroups
  uriParameters:
    agencyId:
      type: string
      description: The prison
  type: { readOnlyCollection: { type: LocationGroup[], description: List of all available Location Groups at agency. } }

# Note this should be moved to the whereabouts API once that is available
/{agencyId}/locations/whereabouts:
  (javaOperationName): getWhereabouts
  uriParameters:
    agencyId:
      type: string
      description: The prison
  type: { readOnlyItem: { type: WhereaboutsConfig, description: Whereabouts details (e.g. whether enabled) for prison. } }

/prison:
  (javaOperationName): getPrisonContactDetailList
  type: { readOnlyCollection: { type: PrisonContactDetail, description: List of prison contact details. } }

/prison/{agencyId}:
  (javaOperationName): getPrisonContactDetail
  type: { readOnlyItem: { type: PrisonContactDetail, description: Prison contact detail. } }

/caseload/{caseload}:
  description: Returns list of active agencies for the caseload
  (javaOperationName): getAgenciesByCaseload
  type: { readOnlyCollection: { type: Agency, description: List of agencies for caseload. } }
